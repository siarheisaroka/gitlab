stages:
- build
- test
- push
- stage_pub

variables:
  test_var: "app"

build:
  stage: build
  tags:
  - GCP
  environment:
    name: task02
  script:
  - docker system prune -f
  - ls -al
  - cat 02_Continuous_Delivery/html/index.html | head -n 15 refresh || sed -i '10a\\t\<meta http-equiv="refresh" content="5"\>' index.html
  - docker build -t $IMAGE_NAME:$IMAGE_TAG .
  - mkdir -p build
  - ls -al
  - docker save $IMAGE_NAME:$IMAGE_TAG -o build/$IMAGE_NAME.tar.gz
  - ls -al build/
  artifacts:
    when: on_success
    paths:
    - build/
test:
  stage: test
  tags:
  - GCP
  environment:
    name: task02
  script:
  - docker system prune -f
  - docker-compose up -d
  - sleep 10
  - ss -ntpl
  - ./test_app.sh
  after_script:
  - echo "Execute this command after the `script` section completes."
  - ls -al
  - docker-compose down

save:
  stage: push
  tags:
  - GCP
  environment:
    name: task02
  script:
  - docker load -i build/$IMAGE_NAME.tar.gz
  - docker tag $IMAGE_NAME:$IMAGE_TAG $DOCKER_USER_NAME/$IMAGE_NAME:$IMAGE_TAG
  - docker login -u $DOCKER_USER_NAME -p $BUILD_TOKEN
  - docker push $DOCKER_USER_NAME/$IMAGE_NAME:$IMAGE_TAG

run_on_stage:
  tags:
  - STAGE
  environment:
    name: task02
  stage: stage_pub





